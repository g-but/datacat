version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: formular-postgres-prod
    environment:
      POSTGRES_DB: ${DB_DATABASE:-formbuilder}
      POSTGRES_USER: ${DB_USER:-formbuilder}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - formular-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-formbuilder} -d ${DB_DATABASE:-formbuilder}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    container_name: formular-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_prod_data:/data
    networks:
      - formular-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Main Application (Frontend + Backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: formular-app-prod
    environment:
      NODE_ENV: production
      PORT: 5001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-formbuilder}
      DB_USER: ${DB_USER:-formbuilder}
      DB_PASSWORD: ${DB_PASSWORD}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_URL: postgresql://${DB_USER:-formbuilder}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE:-formbuilder}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:5001}
      NEXT_PUBLIC_BRAND_PRESET: ${NEXT_PUBLIC_BRAND_PRESET:-generic}
    ports:
      - "3000:3000"
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - formular-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: formular-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - formular-network
    restart: unless-stopped
    profiles:
      - nginx

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  formular-network:
    driver: bridge 